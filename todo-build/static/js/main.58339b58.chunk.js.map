{"version":3,"sources":["components/new-task-form/new-task-form.jsx","components/new-task-form/index.js","components/task/task.jsx","components/task/index.js","components/task-list/task-list.jsx","components/task-list/index.js","components/tasks-filter/tasks-filter.jsx","components/tasks-filter/index.js","components/footer/footer.jsx","components/footer/index.js","components/app/app.jsx","components/app/index.js","index.js"],"names":["NewTaskForm","changeNewTask","target","id","setState","textNewTask","value","minNewTask","secNewTask","state","addTask","this","props","handlingEvent","key","milsecNewTask","Number","className","placeholder","onChange","event","onKeyDown","class","Component","defaultProps","Task","checked","description","created","onClickTask","onClickDestroy","onClickEdit","view","completed","timeWork","sumTimeWork","onClickPlay","onClickPause","time","delta","workTimeSeconds","parseInt","workTimeMinutes","timeConverter","type","htmlFor","onClick","TaskList","tasks","completedTask","deleteTask","editTask","changeEditTask","handlingEventEdit","workTaskPlay","workTaskPause","text","elements","map","item","textValue","timeWorkTask","sumTimeWorkTask","onFocus","message","length","TasksFilter","onClickActive","onClickCompleted","onClickAll","buttonSelected","Footer","buttons","filtrationActiveTask","filtrationCompletedTask","filtrationAllTask","deleteCompletedTasks","filter","el","activeTask","classNames","require","App","interval","useState","taskData","setTaskData","buttonData","setButtonData","taskEdit","setTaskEdit","status","useEffect","getTasks","localStorage","getItem","getTasksPars","JSON","parse","setItem","stringify","createItem","milsec","formatDistanceToNow","Date","includeSeconds","uuidv4","selectedButton","idx","checkClass","selected","newItem","newTaskData","findIndex","oldItem","slice","editing","startTime","now","setInterval","sumTime","clearInterval","hidden","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.58339b58.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './new-task-form.css';\r\n\r\nexport default class NewTaskForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      textNewTask: '',\r\n\t\t\tminNewTask: '',\r\n\t\t\tsecNewTask: ''\r\n    };\r\n  }\r\n\r\n  changeNewTask = (target) => {\r\n\t\tif (target.id === '1') this.setState({ textNewTask: target.value })\r\n\t\telse if (target.id === '2') this.setState({ minNewTask: target.value })\r\n\t\telse if (target.id === '3') this.setState({ secNewTask: target.value })\r\n\t\telse return;\r\n  };\r\n\r\n  render() {\r\n    const { addTask } = this.props;\r\n    const { textNewTask, minNewTask, secNewTask } = this.state;\r\n\r\n    const handlingEvent = ({ key }) => {\r\n\t\t\tif (key === 'Enter') {\r\n\t\t\t\tconst milsecNewTask = (Number(minNewTask) * 60 * 1000) + (Number(secNewTask) * 1000)\r\n\t\t\t\tif (Number(minNewTask) > 59 || Number(secNewTask) > 59) return;\r\n\t\t\t\taddTask(textNewTask, milsecNewTask);\r\n        this.setState({\r\n\t\t\t\t\ttextNewTask: '',\r\n\t\t\t\t\tminNewTask: '',\r\n\t\t\t\t\tsecNewTask: ''\r\n\t\t\t\t});\r\n      }\r\n    };\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <form className=\"new-todo-form\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\tid={1}\r\n          className=\"new-todo\"\r\n          placeholder=\"Task\"\r\n          onChange={(event) => this.changeNewTask(event.target)}\r\n          onKeyDown={(event) => handlingEvent(event)}\r\n          value={textNewTask}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\tid={2}\r\n\t\t\t\t\tclass=\"new-todo-form__timer\"\r\n\t\t\t\t\tplaceholder=\"Min\"\r\n\t\t\t\t\tonChange={(event) => this.changeNewTask(event.target)}\r\n\t\t\t\t\tonKeyDown={(event) => handlingEvent(event)}\r\n\t\t\t\t\tvalue={minNewTask}\r\n\t\t\t\t\t/>\r\n          <input\r\n\t\t\t\t\tid={3}\r\n\t\t\t\t\tclass=\"new-todo-form__timer\"\r\n\t\t\t\t\tplaceholder=\"Sec\"\r\n\t\t\t\t\tonChange={(event) => this.changeNewTask(event.target)}\r\n\t\t\t\t\tonKeyDown={(event) => handlingEvent(event)}\r\n\t\t\t\t\tvalue={secNewTask}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nNewTaskForm.defaultProps = {\r\n  addTask: () => {},\r\n};\r\n\r\nNewTaskForm.propTypes = {\r\n  addTask: PropTypes.func,\r\n};\r\n","import NewTaskForm from './new-task-form.jsx';\r\n\r\nexport default NewTaskForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './task.css';\r\n\r\nconst Task = (props) => {\r\n  const {\r\n    description, created, onClickTask, onClickDestroy, onClickEdit, view, id, completed, \r\n\t\ttimeWork, sumTimeWork, onClickPlay, onClickPause\r\n  } = props;\r\n\r\n\tlet checked = false;\r\n\tchecked = (completed === 'completed') ? true : false;\r\n\r\n\tlet sumTime = timeWork + sumTimeWork;\r\n\r\n\tfunction timeConverter(delta) {\r\n\t\tlet workTimeSeconds = parseInt((delta/1000)%60);\r\n\t\t\tlet workTimeMinutes = parseInt((delta/(1000*60))%60);\r\n\t\t\tworkTimeSeconds = (workTimeSeconds < 10) ? \"0\" + workTimeSeconds : workTimeSeconds;\r\n\t\t\tworkTimeMinutes = (workTimeMinutes < 10) ? \"0\" + workTimeMinutes : workTimeMinutes;\r\n\t\t\treturn `${workTimeMinutes}:${workTimeSeconds}`;\r\n\t}\r\n\r\n\tconst time = timeConverter(sumTime);\r\n\r\n  return (\r\n    <div className={view}>\r\n      <input id={id} className=\"toggle\" type=\"checkbox\" checked={checked} onChange={onClickTask} />\r\n      <label htmlFor={id}>\r\n        <span className=\"title\">{description}</span>\r\n        <span className=\"description\">\r\n\t\t\t\t\t<button className=\"icon icon-play\" onClick={onClickPlay}></button>\r\n          <button className=\"icon icon-pause\" onClick={onClickPause}></button>\r\n          <span className=\"time\">{time}</span>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className=\"description\">{created}</span>\r\n      </label>\r\n      <button type=\"button\" className=\"icon icon-edit\" onClick={onClickEdit} />\r\n      <button type=\"button\" className=\"icon icon-destroy\" onClick={onClickDestroy} />\r\n    </div>\r\n  );\r\n};\r\n\r\nTask.defaultProps = {\r\n  description: '',\r\n  created: '',\r\n  onClickTask: () => {},\r\n  onClickDestroy: () => {},\r\n  onClickEdit: () => {},\r\n  view: 'view',\r\n  id: 0,\r\n};\r\n\r\nTask.propTypes = {\r\n  description: PropTypes.string,\r\n  created: PropTypes.string,\r\n  onClickTask: PropTypes.func,\r\n  onClickDestroy: PropTypes.func,\r\n  onClickEdit: PropTypes.func,\r\n  view: PropTypes.string,\r\n  id: PropTypes.number,\r\n};\r\n\r\nexport default Task;\r\n","import Task from './task.jsx';\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Task from '../task';\r\nimport './task-list.css';\r\n\r\nconst TaskList = (props) => {\r\n\tconst {\r\n    tasks, completedTask, deleteTask, editTask, changeEditTask, handlingEventEdit, value,\r\n\t\tworkTaskPlay, workTaskPause\r\n  } = props;\r\n  const { text, id } = value;\r\n\r\n  const elements = tasks.map((item) => {\r\n    let textValue;\r\n    if (id === item.id) textValue = text;\r\n    else textValue = item.description;\r\n    return (\r\n      <li key={item.id} className={item.class}>\r\n        <Task\r\n          description={item.description}\r\n          created={item.created}\r\n          onClickTask={() => completedTask(item.id)}\r\n          onClickDestroy={() => deleteTask(item.id)}\r\n          onClickEdit={() => editTask(item.id)}\r\n          view={item.view}\r\n          id={item.id}\r\n\t\t\t\t\tcompleted={item.class}\r\n\t\t\t\t\ttimeWork={item.timeWorkTask}\r\n\t\t\t\t\tsumTimeWork={item.sumTimeWorkTask}\r\n\t\t\t\t\tonClickPlay={() => workTaskPlay(item.id)}\r\n\t\t\t\t\tonClickPause={() => workTaskPause(item.id)}\r\n        />\r\n        <input\r\n          key={item.id}\r\n          type=\"text\"\r\n          className=\"edit\"\r\n          value={textValue}\r\n          onChange={(event) => changeEditTask(event.target.value, item.id)}\r\n          onKeyDown={(event) => handlingEventEdit(event, item.id)}\r\n          onFocus={(event) => changeEditTask(event.target.value, item.id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n\tconst message = <div className=\"massage\">There's no task yet</div>\r\n\r\n  return <ul className=\"todo-list\">{tasks.length === 0 ? message : elements}</ul>;\r\n};\r\n\r\nTaskList.defaultProps = {\r\n  tasks: [],\r\n  completedTask: () => {},\r\n  deleteTask: () => {},\r\n  editTask: () => {},\r\n  changeEditTask: () => {},\r\n  handlingEventEdit: () => {},\r\n  value: { text: '', id: null },\r\n};\r\n\r\nTaskList.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.object),\r\n  completedTask: PropTypes.func,\r\n  deleteTask: PropTypes.func,\r\n  editTask: PropTypes.func,\r\n  changeEditTask: PropTypes.func,\r\n  handlingEventEdit: PropTypes.func,\r\n  value: PropTypes.objectOf(PropTypes.object),\r\n};\r\n\r\nexport default TaskList;\r\n","import TaskList from './task-list.jsx';\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './tasks-filter.css';\r\n\r\nconst TasksFilter = (props) => {\r\n  const {\r\n    onClickActive, onClickCompleted, onClickAll, buttonSelected,\r\n  } = props;\r\n\r\n  return (\r\n    <ul className=\"filters\">\r\n      <li>\r\n        <button\r\n          type=\"button\"\r\n          className={buttonSelected[0].class}\r\n          id={buttonSelected[0].id}\r\n          onClick={() => onClickAll(buttonSelected[0].id)}\r\n        >\r\n          All\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button\r\n          type=\"button\"\r\n          className={buttonSelected[1].class}\r\n          id={buttonSelected[1].id}\r\n          onClick={() => onClickActive(buttonSelected[1].id)}\r\n        >\r\n          Active\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button\r\n          type=\"button\"\r\n          className={buttonSelected[2].class}\r\n          id={buttonSelected[2].id}\r\n          onClick={() => onClickCompleted(buttonSelected[2].id)}\r\n        >\r\n          Completed\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nTasksFilter.defaultProps = {\r\n  onClickActive: () => {},\r\n  onClickCompleted: () => {},\r\n  onClickAll: () => {},\r\n  buttonSelected: [\r\n    { class: 'selected', id: 'button-all' },\r\n    { class: '', id: 'button-active' },\r\n    { class: '', id: 'button-completed' },\r\n  ],\r\n};\r\n\r\nTasksFilter.propTypes = {\r\n  onClickActive: PropTypes.func,\r\n  onClickCompleted: PropTypes.func,\r\n  onClickAll: PropTypes.func,\r\n  buttonSelected: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default TasksFilter;\r\n","import TasksFilter from './tasks-filter.jsx';\r\n\r\nexport default TasksFilter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TasksFilter from '../tasks-filter';\r\nimport './footer.css';\r\n\r\nconst Footer = (props) => {\r\n  const COMPLETED = 'completed';\r\n\tconst {\r\n    tasks, buttons,\r\n  } = props;\r\n  const {\r\n    filtrationActiveTask, filtrationCompletedTask, filtrationAllTask, deleteCompletedTasks,\r\n  } = props;\r\n  const completedTask = (tasks.filter((el) => el.class === COMPLETED)).length;\r\n  const activeTask = tasks.length - completedTask;\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">\r\n        {activeTask}\r\n        {' '}\r\n        items left\r\n      </span>\r\n      <TasksFilter\r\n        onClickActive={filtrationActiveTask}\r\n        onClickCompleted={filtrationCompletedTask}\r\n        onClickAll={filtrationAllTask}\r\n        buttonSelected={buttons}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"clear-completed\"\r\n        onClick={deleteCompletedTasks}\r\n      >\r\n        Clear completed\r\n      </button>\r\n    </footer>\r\n  );\r\n};\r\n\r\nFooter.defaultProps = {\r\n  tasks: [],\r\n  filtrationActiveTask: () => {},\r\n  filtrationCompletedTask: () => {},\r\n  filtrationAllTask: () => {},\r\n  buttons: [],\r\n  deleteCompletedTasks: () => {},\r\n};\r\n\r\nFooter.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.object),\r\n  filtrationActiveTask: PropTypes.func,\r\n  filtrationCompletedTask: PropTypes.func,\r\n  filtrationAllTask: PropTypes.func,\r\n  buttons: PropTypes.arrayOf(PropTypes.object),\r\n  deleteCompletedTasks: PropTypes.func,\r\n};\r\n\r\nexport default Footer;\r\n","import Footer from './footer.jsx';\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport NewTaskForm from '../new-task-form';\r\nimport TaskList from '../task-list';\r\nimport Footer from '../footer';\r\n\r\nimport './app.css';\r\n\r\nconst classNames = require('classnames');\r\n\r\nconst App = () => {\r\n\tconst [taskData, setTaskData] = useState([]);\r\n\tconst [buttonData, setButtonData] = useState([\r\n\t\t{ class: 'selected', id: 'button-all' },\r\n    { class: '', id: 'button-active' },\r\n    { class: '', id: 'button-completed' }\r\n\t]);\r\n\tconst [taskEdit, setTaskEdit] = useState({});\r\n\r\n  const status = {\r\n    COMPLETED: 'completed',\r\n    EDITING: 'editing',\r\n    VIEW: 'view',\r\n  };\r\n\r\n  const completedItem = (id) => {\r\n\t\tsetTaskData((taskData) => {\r\n\t\t\tconst idx = taskData.findIndex((el) => el.id === id);\r\n      const checkClass = classNames({\r\n        completed: !(taskData[idx].class === status.COMPLETED),\r\n      });\r\n      const oldItem = taskData[idx];\r\n      const newItem = { ...oldItem, class: checkClass };\r\n      const newTaskData = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(newTaskData));\r\n\t\t\treturn taskData = newTaskData;\r\n\t\t});\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n\t\tsetTaskData((taskData) => {\r\n\t\t\tconst newTaskData = taskData.filter((el) => el.id !== id);\r\n      localStorage.setItem('tasks', JSON.stringify(newTaskData));\r\n\t\t\treturn taskData = newTaskData;\r\n\t\t});\r\n  };\r\n\r\n  const editItem = (id) => {\r\n\t\tsetTaskData((taskData) => {\r\n\t\t\tconst idx = taskData.findIndex((el) => el.id === id);\r\n      const checkClass = classNames({\r\n        editing: !(taskData[idx].class === status.EDITING),\r\n\t\t\t});\r\n      const oldItem = taskData[idx];\r\n      const newItem = { ...oldItem, class: checkClass };\r\n      const newTaskData = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\r\n\t\t\treturn taskData = newTaskData;\r\n\t\t});\r\n\t};\r\n\r\n  const addItem = (text, milsec) => {\r\n    if (text.length === 0) return;\r\n    const newItem = createItem(text, milsec);\r\n    setTaskData((taskData) => {\r\n\t\t\tconst newTaskData = [...taskData, newItem];\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(newTaskData));\r\n      return taskData = newTaskData;\r\n\t\t});\r\n  };\r\n\r\n\tconst filtrationActiveItem = (id) => {\r\n\t\tsetTaskData((taskData) => {\r\n\t\t\tconst oldTaskData = [...(taskData)];\r\n      const newTaskData = oldTaskData.map((el) => {\r\n        const checkClass = classNames(\r\n          { view: !(el.class === status.COMPLETED) },\r\n          { hidden: (el.class === status.COMPLETED) },\r\n        );\r\n        const newItem = { ...el, view: checkClass };\r\n        return newItem;\r\n      });\r\n\t\t\treturn taskData = newTaskData;\r\n\t\t});\r\n    selectedButton(id);\r\n  };\r\n\r\n  const filtrationCompletedItem = (id) => {\r\n    setTaskData((taskData) => {\r\n\t\t\tconst oldTaskData = [...(taskData)];\r\n      const newTaskData = oldTaskData.map((el) => {\r\n        const checkClass = classNames(\r\n          { view: (el.class === status.COMPLETED) },\r\n          { hidden: !(el.class === status.COMPLETED) },\r\n          );\r\n\t\t\t\tconst newItem = { ...el, view: checkClass };\r\n        return newItem;\r\n      });\r\n      return taskData = newTaskData;\r\n\t\t});\r\n    selectedButton(id);\r\n  };\r\n\r\n  const filtrationAllItem = (id) => {\r\n\t\tsetTaskData((taskData) => {\r\n\t\t\tconst oldTaskData = [...(taskData)];\r\n      const newTaskData = oldTaskData.map((el) => {\r\n      const newItem = { ...el, view: status.VIEW };\r\n        return newItem;\r\n      });\r\n      return taskData = newTaskData;\r\n\t\t});\r\n\t\tselectedButton(id);\r\n  };\r\n\r\n  const deleteCompletedItems = () => {\r\n\t\tsetTaskData((taskData) => {\r\n\t\t\tconst oldTaskData = [...(taskData)];\r\n      const newTaskData = oldTaskData.filter((el) => el.class !== status.COMPLETED);\r\n      localStorage.setItem('tasks', JSON.stringify(newTaskData));\r\n\t\t\treturn taskData = newTaskData;\r\n\t\t});\r\n  };\r\n\r\n  const editTask = (text, id) => {\r\n\t\tsetTaskEdit({ text, id });\r\n  };\r\n\r\n  const eventEdit = ({ key }, id) => {\r\n    if (key === 'Enter') {\r\n    const { text } = taskEdit;\r\n\t\tsetTaskData((taskData) => {\r\n\t\t\tconst idx = taskData.findIndex((el) => el.id === id);\r\n      const oldItem = taskData[idx];\r\n      const newItem = { ...oldItem, class: '', description: text };\r\n      const newTaskData = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\r\n      localStorage.setItem('tasks', JSON.stringify(newTaskData));\r\n\t\t\treturn taskData = newTaskData;\r\n\t\t});\r\n    }\r\n  };\r\n\r\n\tlet interval;\r\n\tlet delta = 0;\r\n\r\n\tconst workItemPlay = (id) => {\r\n\t\tconst startTime = Date.now();\r\n\t\tinterval = setInterval(() => {\r\n\t\t\tdelta = Date.now() - startTime;\r\n\t\t\tsetTaskData((taskData) => {\r\n\t\t\t\tconst idx = taskData.findIndex((el) => el.id === id);\r\n\t\t\t\tconst oldItem = taskData[idx];\r\n\t\t\t\tconst newItem = { ...oldItem, timeWorkTask: delta };\r\n\t\t\t\tconst newTaskData = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\r\n\t\t\t\tlocalStorage.setItem('tasks', JSON.stringify(newTaskData));\r\n\t\t\t\treturn taskData = newTaskData;\r\n\t\t\t});\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tconst workItemPause = (id) => {\r\n\t\tsetTaskData((taskData) => {\r\n\t\t\tconst idx = taskData.findIndex((el) => el.id === id);\r\n\t\t\tconst oldItem = taskData[idx];\r\n\t\t\tconst sumTime = oldItem.sumTimeWorkTask + delta;\r\n\t\t\tconst newItem = { ...oldItem, sumTimeWorkTask: sumTime, timeWorkTask: 0 };\r\n\t\t\tconst newTaskData = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(newTaskData));\r\n\t\t\treturn taskData = newTaskData;\r\n\t\t});\r\n\t\tclearInterval(interval);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTasks = localStorage.getItem('tasks');\r\n\t\tconst getTasksPars = JSON.parse(getTasks);\r\n\t\tsetTaskData((taskData) => taskData = getTasksPars);\r\n\t\treturn () => {localStorage.setItem('tasks', JSON.stringify(taskData));}\r\n\t}, []);\r\n\r\n  const createItem = (description, milsec) => {\r\n    return {\r\n      class: '',\r\n      description,\r\n      view: 'view',\r\n      created: formatDistanceToNow(new Date(), { includeSeconds: true }),\r\n      id: uuidv4(),\r\n\t\t\ttimeWorkTask: 0,\r\n\t\t\tsumTimeWorkTask: milsec\r\n    };\r\n  }\r\n\r\n\tconst selectedButton = (idx) => {\r\n\t\tsetButtonData((buttonData) => {\r\n\t\t\tconst oldButtonData = [...(buttonData)];\r\n      const newButtonData = oldButtonData.map((el) => {\r\n        const checkClass = classNames(\r\n          { selected: (el.id === idx) },\r\n          { '': !(el.id === idx) },\r\n        );\r\n        const newItem = { ...el, class: checkClass };\r\n        return newItem;\r\n      });\r\n      return buttonData = newButtonData;\r\n\t\t})\r\n  }\r\n\t\r\n  return (\r\n    <section className=\"todoapp\">\r\n      <NewTaskForm addTask={addItem} />\r\n      <section className=\"main\">\r\n        <TaskList\r\n          tasks={taskData}\r\n          completedTask={completedItem}\r\n          deleteTask={deleteItem}\r\n          editTask={editItem}\r\n          changeEditTask={editTask}\r\n          handlingEventEdit={eventEdit}\r\n          value={taskEdit}\r\n\t\t\t\t\tworkTaskPlay={workItemPlay}\r\n\t\t\t\t\tworkTaskPause={workItemPause}\r\n        />\r\n        <Footer\r\n          tasks={taskData}\r\n          filtrationActiveTask={filtrationActiveItem}\r\n          filtrationCompletedTask={filtrationCompletedItem}\r\n          filtrationAllTask={filtrationAllItem}\r\n          buttons={buttonData}\r\n          deleteCompletedTasks={deleteCompletedItems}\r\n        />\r\n      </section>\r\n\t\t</section>\r\n  );\r\n}\r\n\r\nexport default App;","import App from './app.jsx';\r\n\r\nexport default App;\r\n","import React from 'react';\nimport reactDom from 'react-dom';\n\nimport App from './components/app';\n\nreactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}